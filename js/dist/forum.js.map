{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCGxDC,IAAAA,aAAAA,IAAqB,0BAA0B,WCQ7CC,IAAAA,UAAAA,OAAwBC,IAAAA,UAAgB,UACxCD,IAAAA,UAAAA,WAA4BC,IAAAA,UAAgB,gBAE5CC,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,eAAe,SAAUC,GACrD,IAAMC,EAASC,KAAKC,MAAMC,KAAKH,SACzBI,EAAaH,KAAKC,MAAMC,KAAKC,aAEnC,GAAKJ,EAAL,CAIA,IAGIK,EAHEC,EAAcZ,IAAAA,WAAAA,MAAqB,4CAA8CM,GACjFO,EAAY,qBAKhBF,EADEL,IAAWI,EACH,UAAMG,UAAWA,GAAYD,GAGrC,EAAC,IAAD,CAASE,KAAMJ,GACb,UAAMG,UAAWA,GAAYD,IAKnCP,EAAMU,IAAI,SAAUJ,EAAS,Y","sources":["webpack://@blomstra/conversations/webpack/bootstrap","webpack://@blomstra/conversations/webpack/runtime/compat get default export","webpack://@blomstra/conversations/webpack/runtime/define property getters","webpack://@blomstra/conversations/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/conversations/webpack/runtime/make namespace object","webpack://@blomstra/conversations/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/conversations/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/conversations/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/conversations/external root \"flarum.core.compat['common/models/Post']\"","webpack://@blomstra/conversations/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@blomstra/conversations/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@blomstra/conversations/./src/forum/index.ts","webpack://@blomstra/conversations/./src/forum/extend/addPostSourceToCommentPost.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport addSourceToCommentPost from './extend/addPostSourceToCommentPost';\n\napp.initializers.add('blomstra/conversations', () => {\n  addSourceToCommentPost();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Post from 'flarum/common/models/Post';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nimport type Mithril from 'mithril';\n\nexport default function addSourceToCommentPost() {\n  Post.prototype.source = Model.attribute('source');\n  Post.prototype.sourceData = Model.attribute('source_data');\n\n  extend(CommentPost.prototype, 'headerItems', function (items: ItemList<any>) {\n    const source = this.attrs.post.source();\n    const sourceData = this.attrs.post.sourceData();\n\n    if (!source) {\n      return;\n    }\n\n    const displayText = app.translator.trans('blomstra-conversations.forum.post.source.' + source);\n    const className = 'ConversationSource';\n\n    let element;\n\n    if (source && !sourceData) {\n      element = <span className={className}>{displayText}</span>;\n    } else {\n      element = (\n        <Tooltip text={sourceData}>\n          <span className={className}>{displayText}</span>\n        </Tooltip>\n      );\n    }\n\n    items.add('source', element, 90);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","Post","Model","extend","CommentPost","items","source","this","attrs","post","sourceData","element","displayText","className","text","add"],"sourceRoot":""}